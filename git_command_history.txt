Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice
$ ls

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice
$ git init
Initialized empty Git repository in C:/Users/Lenovo/Desktop/Bahubali/git_practice/.git/

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git add README.md
fatal: pathspec 'README.md' did not match any files

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ echo "# git practice" >> README.md

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        README.md

nothing added to commit but untracked files present (use "git add" to track)

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git add README.md
warning: LF will be replaced by CRLF in README.md.
The file will have its original line endings in your working directory

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   README.md


Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git commit -m "fist commit"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'Lenovo@LAPTOP5NU5EP0H.(none)')

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ^C

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git config --gloabl user.email "bahubalip2003@yahoo.com"
error: unknown option `gloabl'
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git commit -m "fist commit"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'Lenovo@LAPTOP5NU5EP0H.(none)')

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git config --global user.email "test@test.com"

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git config --global user.user "user"

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git commit -m "fist commit"
[master (root-commit) 1d208be] fist commit
 1 file changed, 1 insertion(+)
 create mode 100644 README.md

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
nothing to commit, working tree clean

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git log
commit 1d208beb8533781bad96bf7708a8261a4e2ae162 (HEAD -> master)
Author: unknown <test@test.com>
Date:   Sat Apr 3 01:43:39 2021 +0530

    fist commit

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git remote add origin https://github.com/pythonpb13/git_practice.git

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git push origin master

Unhandled Exception: System.ComponentModel.Win32Exception: Invalid window handle
   at MS.Win32.ManagedWndProcTracker.HookUpDefWindowProc(IntPtr hwnd)
   at MS.Win32.ManagedWndProcTracker.OnAppDomainProcessExit()
   at MS.Internal.ShutDownListener.HandleShutDown(Object sender, EventArgs e)
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 219 bytes | 219.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/pythonpb13/git_practice.git
 * [new branch]      master -> master

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls
README.md

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ cat README.md
# git practice

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        files.txt
        folders.txt

nothing added to commit but untracked files present (use "git add" to track)

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git add files.txt  folders.txt
warning: LF will be replaced by CRLF in files.txt.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in folders.txt.
The file will have its original line endings in your working directory

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git commit -m "folders" files.txt  folders.txt
warning: LF will be replaced by CRLF in files.txt.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in folders.txt.
The file will have its original line endings in your working directory
[master 2cd8204] folders
 2 files changed, 2 insertions(+)
 create mode 100644 files.txt
 create mode 100644 folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
nothing to commit, working tree clean

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git push origin master
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 12 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 347 bytes | 347.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/pythonpb13/git_practice.git
   1d208be..2cd8204  master -> master

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git remote -v
origin  https://github.com/pythonpb13/git_practice.git (fetch)
origin  https://github.com/pythonpb13/git_practice.git (push)

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls
README.md  files.txt  folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls -la
total 15
drwxr-xr-x 1 Lenovo 197121  0 Apr  3 02:11 ./
drwxr-xr-x 1 Lenovo 197121  0 Apr  3 01:17 ../
drwxr-xr-x 1 Lenovo 197121  0 Apr  3 02:11 .git/
-rw-r--r-- 1 Lenovo 197121 15 Apr  3 01:40 README.md
-rw-r--r-- 1 Lenovo 197121 19 Apr  3 02:10 files.txt
-rw-r--r-- 1 Lenovo 197121 22 Apr  3 02:11 folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls
README.md  files.txt  folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ rm folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    folders.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls
README.md  files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
nothing to commit, working tree clean

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls
README.md  files.txt  folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ rm files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git add files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ rm files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   files.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    files.txt


Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ rm files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   files.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    files.txt


Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls
README.md  files.txt  folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ rm files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore --staged filex.txt
error: pathspec 'filex.txt' did not match any file(s) known to git

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore --staged files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls
README.md  folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore --staged files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls
README.md  folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$  vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ rm files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git add files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   files.txt


Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore --staged files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git add files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   files.txt


Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls
README.md  files.txt  folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ rm files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   files.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    files.txt


Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore --staged files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls
README.md  folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ rm files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status'
> '
git: 'status
' is not a git command. See 'git --help'.

The most similar command is
        status

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   files.txt

no changes added to commit (use "git add" and/or "git commit -a")

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git add files.txt
warning: LF will be replaced by CRLF in files.txt.
The file will have its original line endings in your working directory

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   files.txt


Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ rm files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   files.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    files.txt


Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ git restore files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ ls
README.md  files.txt  folders.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ vi files.txt

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$ history
    1  ls
    2  git init
    3  git add README.md
    4  echo "# git practice" >> README.md
    5  git status
    6  git add README.md
    7  git status
    8  git commit -m "fist commit"
    9  git config --gloabl user.email "bahubalip2003@yahoo.com"
   10  git commit -m "fist commit"
   11  git config --global user.email "test@test.com"
   12  git config --global user.user "user"
   13  git commit -m "fist commit"
   14  git status
   15  git log
   16  git remote add origin https://github.com/pythonpb13/git_practice.git
   17  git push origin master
   18  ls
   19  cat README.md
   20  vi files.txt
   21  vi folders.txt
   22  git status
   23  git add files.txt  folders.txt
   24  git commit -m "folders" files.txt  folders.txt
   25  git status
   26  git push origin master
   27  git remote -v
   28  ls
   29  ls -la
   30  ls
   31  rm folders.txt
   32  git status
   33  ls
   34  git restore folders.txt
   35  git status
   36  ls
   37  vi files.txt
   38  git status
   39  rm files.txt
   40  git status
   41  git restore files.txt
   42  vi files.txt
   43  git status
   44  git add files.txt
   45  rm files.txt
   46  git status
   47  git restore files.txt
   48  vi files.txt
   49  rm files.txt
   50  git status
   51  git restore files.txt
   52  vi files.txt
   53  ls
   54  vi files.txt
   55  rm files.txt
   56  git restore --staged filex.txt
   57  git restore --staged files.txt
   58  ls
   59  git status
   60  git restore --staged files.txt
   61  ls
   62  git status
   63  git restore files.txt
   64  vi files.txt
   65   vi files.txt
   66  git status
   67  rm files.txt
   68  git status
   69  git restore files.txt
   70  vi files.txt
   71  git status
   72  git add files.txt
   73  git status
   74  vi files.txt
   75  git restore --staged files.txt
   76  vi files.txt
   77  vi files.txt
   78  git status
   79  git add files.txt
   80  git status
   81  ls
   82  rm files.txt
   83  git status
   84  git restore --staged files.txt
   85  vi files.txt
   86  git status
   87  ls
   88  git restore files.txt
   89  vi files.txt
   90  rm files.txt
   91  git status
   92  vi files.txt
   93  git status'
'
   94  git status
   95  git add files.txt
   96  git status
   97  rm files.txt
   98  git status
   99  git restore files.txt
  100  ls
  101  vi files.txt
  102  history

Lenovo@LAPTOP5NU5EP0H MINGW64 ~/Desktop/Bahubali/git_practice (master)
$
